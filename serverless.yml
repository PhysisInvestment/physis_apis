service: physisBackEnd
package:
  individually: true
  excludeDevDependencies: true

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-webpack
  - serverless-aws-alias
  - serverless-pseudo-parameters

custom:
  webpack:
    packager: 'yarn'
    packExternalModulesMaxBuffer: 200 * 1024   # Size of stdio buffers for spawned child processes

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'prod'}
  region: us-east-1
  environment:
      USER_TABLE: ProdPhysisUser

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  emailExists:
    handler: handlers/emailExisits.checkEmailExists
    events:
      - http:
          path: api/auth/emailExists
          method: get
          cors: true

  getUserData:
    handler: handlers/get_profile_data.getUserData
    events:
      - http:
          path: api/getUserData
          method: get
          cors: true



  updateUserProfile:
    handler: handlers/updateProfile.updateProfile
    events:
      - http:
          path: api/updateUserProfile
          method: put
          cors: true

#resources:
# Resources:
#    userTable:
#     Type: 'AWS::DynamoDB::Table'
#      DeletionPolicy: Retain
#      Properties:
#        ## a formality for creating table
#        AttributeDefinitions:
#          -
#            AttributeName: CognitoId
#            AttributeType: S
#        KeySchema:
#          -
#            AttributeName: CognitoId
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 15
#          WriteCapacityUnits: 5
#        TableName: ${self:provider.environment.USER_TABLE}
